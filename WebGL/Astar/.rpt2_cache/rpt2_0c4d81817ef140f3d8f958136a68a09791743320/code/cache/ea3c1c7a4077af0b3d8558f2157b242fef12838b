{
  "code": "var Sprite = Laya.Sprite;\r\nimport Node from \"./Node\";\r\nimport myArray from \"./myArray\";\r\nexport default class Map {\r\n    constructor() {\r\n        this.rectWidth = 10;\r\n        this.rectHeight = 10;\r\n        this.mapWidth = 101;\r\n        this.mapHeight = 100;\r\n    }\r\n    DrawRect(xPos, yPos, rectColor) {\r\n        let sp = new Sprite();\r\n        Laya.stage.addChild(sp);\r\n        sp.graphics.drawRect(xPos, yPos, this.rectWidth, this.rectHeight, rectColor);\r\n        return sp;\r\n    }\r\n    DrawMap() {\r\n        let nodeArr = new myArray(this.mapWidth, this.mapHeight, null);\r\n        for (let i = 0; i <= this.mapWidth - 1; i++) {\r\n            for (let j = 0; j <= this.mapHeight - 1; j++) {\r\n                let tempNode;\r\n                if (i % 2 == 0 || j == 0 || j == this.mapHeight - 1) {\r\n                    let tempSprite = this.DrawRect(i * this.rectWidth, j * this.rectHeight, \"#000000\");\r\n                    tempNode = new Node(i, j, true, tempSprite);\r\n                }\r\n                else {\r\n                    let tempSprite = this.DrawRect(i * this.rectWidth, j * this.rectHeight, \"#ffffff\");\r\n                    tempNode = new Node(i, j, false, tempSprite);\r\n                }\r\n                nodeArr.setValue(j, i, tempNode);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.mapWidth; i++) {\r\n            let randomPos = Math.floor(Math.random() * this.mapHeight);\r\n            if (randomPos == 0) {\r\n                randomPos++;\r\n            }\r\n            if (randomPos == this.mapHeight - 1) {\r\n                randomPos--;\r\n            }\r\n            nodeArr.getValue(randomPos, i).rectSprite = this.DrawRect(i * this.rectWidth, randomPos * this.rectHeight, \"#ffffff\");\r\n            nodeArr.getValue(randomPos, i).isBarrier = false;\r\n        }\r\n        return nodeArr;\r\n    }\r\n}\r\n",
  "references": [
    "E:/laya/Astar/src/Node.ts",
    "E:/laya/Astar/src/myArray.ts"
  ]
}
