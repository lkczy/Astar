// 程序入口
var Game = (function () {
    function Game() {
        //敌机血量表
        this.hps = [1, 2, 10];
        //敌机速度表
        this.speeds = [3, 2, 1];
        //敌机被击半径表
        this.radius = [15, 30, 70];
        //子弹发射偏移位置表
        this.bulletPos = [[0], [-15, 15], [-30, 0, 30], [-45, -15, 15, 45]];
        Laya.init(480, 852, Laya.WebGL);
        //加载图集资源
        Laya.loader.load("res/atlas/war.json", Laya.Handler.create(this, this.onLoaded), null, Laya.Loader.ATLAS);
        Laya.Stat.show(0, 50);
        //设置适配模式
        Laya.stage.scaleMode = "showall";
        //设置居中对齐
        Laya.stage.alignH = "center";
        //设置横竖屏
        // Laya.stage.screenMode = "vertical";
        laya.debug.DebugTool.init();
    }
    Game.prototype.onLoaded = function () {
        Laya.stage.addChild(new Bg());
        this.roleBox = new Laya.Sprite();
        Laya.stage.addChild(this.roleBox);
        this.hero = new Role();
        this.roleBox.addChild(this.hero);
        this.gameInfo = new GameInfo();
        Laya.stage.addChild(this.gameInfo);
        this.reStart();
    };
    Game.prototype.reStart = function () {
        //重置游戏数据
        this.score = 0;
        this.level = 0;
        this.levelUpScore = 10;
        this.bulletLevel = 0;
        this.gameInfo.reset();
        this.hero.init("hero", 0, 5, 0, 30, 0);
        this.hero.shootType = 1;
        this.hero.shootInterval = 400;
        this.hero.pos(240, 700);
        this.hero.visible = true;
        for (var i = this.roleBox.numChildren - 1; i > -1; i--) {
            var role = this.roleBox.getChildAt(i);
            if (role != this.hero) {
                role.removeSelf();
                //回收之前，重置属性信息
                role.visible = true;
                //回收到对象池
                Laya.Pool.recover("role", role);
            }
        }
        this.resume();
    };
    Game.prototype.resume = function () {
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
        Laya.timer.frameLoop(1, this, this.onLoop);
    };
    /**暂停 */
    Game.prototype.pause = function () {
        //停止游戏主循环
        Laya.timer.clear(this, this.onLoop);
        //移除舞台的鼠标移动事件监听
        Laya.stage.off("mousemove", this, this.onMouseMove);
    };
    Game.prototype.onMouseMove = function () {
        this.hero.pos(Laya.stage.mouseX, Laya.stage.mouseY);
    };
    Game.prototype.createEnemy = function (type, num, speed, hp) {
        for (var i = 0; i < num; i++) {
            //创建敌人，从对象池创建
            var enemy = Laya.Pool.getItemByClass("role", Role);
            //初始化角色
            enemy.init("enemy" + (type + 1), 1, hp, speed, this.radius[type], 0);
            //随机位置
            enemy.pos(Math.random() * 400 + 40, -Math.random() * 200 - 100);
            //添加到舞台上
            this.roleBox.addChild(enemy);
        }
    };
    Game.prototype.onLoop = function () {
        var numChildren = this.roleBox.numChildren;
        for (var i = 0; i < numChildren; i++) {
            var role = this.roleBox.getChildAt(i);
            // 死亡
            if (role && role.speed) {
                role.y += role.speed;
                if (role.y > 1000 || !role.visible || (role.heroType === 1 && role.y < -100)) {
                    role.visible = true;
                    role.removeSelf();
                    Laya.Pool.recover("role", role);
                }
            }
        }
        // 发射子弹
        this.createBullet(this.hero);
        numChildren = this.roleBox.numChildren;
        for (var i = numChildren - 1; i > -1; i--) {
            var role1 = this.roleBox.getChildAt(i);
            if (role1.hp < 1)
                continue;
            for (var j = i - 1; j > -1; j--) {
                if (!role1.visible)
                    continue;
                var role2 = this.roleBox.getChildAt(j);
                if (role2.hp > 0 && role1.camp != role2.camp) {
                    //计算碰撞区域
                    var hitRadius = role1.hitRadius + role2.hitRadius;
                    //根据距离判断是否碰撞
                    if (Math.abs(role1.x - role2.x) < hitRadius && Math.abs(role1.y - role2.y) < hitRadius) {
                        //碰撞后掉血
                        this.lostHp(role1, 1);
                        this.lostHp(role2, 1);
                        this.score++;
                        this.gameInfo.score(this.score);
                        if (this.score >= this.levelUpScore) {
                            this.level++;
                            this.gameInfo.level(this.level);
                            this.levelUpScore += this.level * 5;
                        }
                    }
                }
            }
        }
        if (this.hero.hp < 1) {
            Laya.SoundManager.playSound("res/sound/game_over.mp3");
            Laya.timer.clear(this, this.onLoop);
            //停止主循环
            Laya.timer.clear(this, this.onLoop);
            //显示提示信息
            this.gameInfo.infoLabel.text = "GameOver，分数：" + this.score + "\n点击这里重新开始。";
            //注册舞台点击事件，点击重新开始游戏
            this.gameInfo.infoLabel.once("click", this, this.reStart);
        }
        //关卡越高，创建敌机间隔越短
        var cutTime = this.level < 30 ? this.level * 2 : 60;
        //关卡越高，敌机飞行速度越高
        var speedUp = Math.floor(this.level / 6);
        //关卡越高，敌机血量越高
        var hpUp = Math.floor(this.level / 8);
        //关卡越高，敌机数量越多
        var numUp = Math.floor(this.level / 10);
        //生成小飞机
        if (Laya.timer.currFrame % (80 - cutTime) === 0) {
            this.createEnemy(0, 2 + numUp, 4 + speedUp, 1);
        }
        //生成中型飞机
        if (Laya.timer.currFrame % (150 - cutTime * 2) === 0) {
            this.createEnemy(1, 1 + numUp, 3 + speedUp, 2 + hpUp * 2);
        }
        //生成boss
        if (Laya.timer.currFrame % (900 - cutTime * 4) === 0) {
            this.createEnemy(2, 1, 1 + speedUp, 10 + hpUp * 5);
            Laya.SoundManager.playSound("res/sound/enemy3_out.mp3");
        }
    };
    Game.prototype.lostHp = function (role, hp) {
        role.hp -= hp;
        if (role.heroType == 2) {
            this.bulletLevel++;
            this.hero.shootType = Math.min(Math.floor(this.bulletLevel / 2) + 1, 4);
            this.hero.shootInterval = 400 - 16 * (this.bulletLevel > 20 ? 20 : this.bulletLevel);
            // console.log(this.hero.shootType + " " + this.bulletLevel);
            role.visible = false;
            Laya.SoundManager.playSound("res/sound/achievement.mp3");
        }
        else if (role.heroType == 3) {
            this.hero.hp++;
            if (this.hero.hp >= 10)
                this.hero.hp = 10;
            //在UI上显示血量信息
            this.gameInfo.hp(this.hero.hp);
            role.visible = false;
            Laya.SoundManager.playSound("res/sound/achievement.mp3");
        }
        else if (role.hp > 0) {
            //如果未死亡，则播放受击动画
            role.playAction("hit");
        }
        else {
            //如果死亡，则播放爆炸动画
            if (role.heroType > 0) {
                //如果是子弹，则直接隐藏，下次回收
                role.visible = false;
            }
            else {
                if (role.type != "hero") {
                    Laya.SoundManager.playSound("res/sound/" + role.type + "_down.mp3");
                }
                role.playAction("down");
                if (role.type == "enemy3") {
                    //随机是子弹升级道具还是血瓶
                    var type = Math.random() < 0.7 ? 2 : 3;
                    //掉落血瓶或者加速器                     
                    var item = Laya.Pool.getItemByClass("role", Role);
                    //初始化信息
                    item.init("ufo" + (type - 1), role.camp, 1, 1, 15, type);
                    //初始化位置
                    item.pos(role.x, role.y);
                    //添加到舞台上
                    this.roleBox.addChild(item);
                }
            }
        }
        //设置主角的血量值
        if (role == this.hero) {
            this.gameInfo.hp(role.hp);
        }
    };
    Game.prototype.createBullet = function (role) {
        // if(role.shootType <= 0) return;
        var time = Laya.Browser.now();
        if (time > role.shootTime) {
            role.shootTime = time + role.shootInterval;
            var pos = this.bulletPos[role.shootType - 1];
            for (var i = 0; i < pos.length; i++) {
                // 从对象池创建子弹
                var bullet = Laya.Pool.getItemByClass("role", Role);
                // 初始化子弹信息
                bullet.init("bullet1", role.camp, 1, -5 - role.shootType - Math.floor(this.level / 15), 1, 1);
                // 设置为子弹
                // bullet.isBullet = true;
                // 设置子弹初始位置
                bullet.pos(role.x + pos[i], role.y - role.hitRadius - 10);
                //添加到界面上
                this.roleBox.addChild(bullet);
            }
            Laya.SoundManager.playSound("res/sound/bullet.mp3");
        }
    };
    return Game;
}());
var gameObj = new Game();
//# sourceMappingURL=game.js.map